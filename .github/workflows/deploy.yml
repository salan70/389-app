# 参考
# https://zenn.dev/pressedkonbu/articles/254ca2fc3cd1ab
# https://zenn.dev/yorifuji/articles/flutter-github-actions-template#deliver.yml

name: deploy

on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master


jobs:
  #
  # Build for iOS
  #
  ios: # jobに名前をつけられる
    name: Build for iOS
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - name: Checkout # step に名前をつけられる なくてもいい
        uses: actions/checkout@v3

      - name: Run pre-process script
        shell: bash
        env:
          PREPROCESS_SCRIPT_BASE64: ${{ secrets.PREPROCESS_SCRIPT_BASE64 }}
        run: |
          if [ -n "$PREPROCESS_SCRIPT_BASE64" ]; then
            echo $PREPROCESS_SCRIPT_BASE64 | base64 --decode > ./pre-process.sh && bash ./pre-process.sh
          fi

      - name: Import Provisioning Profile
        env:
          IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo -n "$IOS_PROVISIONING_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/distribution.mobileprovision

      - name: Import Certificate
        env:
          IOS_CERTIFICATE_P12_BASE64: ${{ secrets.CERTIFICATES_P12 }}
          IOS_CERTIFICATE_P12_P12_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          IOS_KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate from secrets
          echo -n "$IOS_CERTIFICATE_P12_BASE64" | base64 --decode --output $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$IOS_KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$IOS_KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$IOS_CERTIFICATE_P12_P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.5'
          channel: 'stable'
          cache: true

      - name: Run flutter version
        run: flutter --version

      - name: Run flutter pub get
        run: flutter pub get

      - name: Build ipa
        id: build
        run: flutter build ipa --export-options-plist=./ios/ExportOptions.plist

      - name: Detect path for ipa file
        run: |
          echo "IPA_PATH=$(find build/ios/ipa -type f -name '*.ipa')" >> $GITHUB_ENV

      - name: Upload to App Store Connect
        id: upload
        env:
          APPLE_APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_PASS: ${{ secrets.APPLE_APP_PASS }}
        run: xcrun altool --upload-app --type ios -f "$IPA_PATH" -u "$APPLE_APPLE_ID" -p "$APPLE_APP_PASS"