# 参考
# https://zenn.dev/pressedkonbu/articles/254ca2fc3cd1ab
# https://zenn.dev/yorifuji/articles/flutter-github-actions-template#deliver.yml

name: deploy

on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master


jobs:
  #
  # Build for iOS
  #
  build_iOS: # jobに名前をつけられる

    name: Build for iOS # GitHubに表示されるジョブの名前
    runs-on: macos-latest # ジョブを実行するマシーンの種類
    timeout-minutes: 30

    steps: #一連のタスク

      # チェックアウト
      - name: Checks-out my repository # step に名前をつけられる なくてもいい
        uses: actions/checkout@v2

      # 空の.envを作成
      # 必要あれば、githubのSECRET情報から値を取得して.envに書き込む
      # 参考
      # https://zenn.dev/big_tanukiudon/articles/fc1a2ff562ce3d#2.-github-actions-%E3%81%AEstep%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A7.env%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B
      - name: Create dot env file
        shell: bash
        run: |
          touch .env

      # Flutter のインストール
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.5'
          channel: 'stable'
          cache: true

      - name: Run flutter version
        run: flutter --version

      - name: Run flutter pub get
        run: flutter pub get

      # 証明書の生成
      - name: Import Provisioning Profile
        run: | # 複数行の run を書きたい場合はこうする。 以下、Provisioning Profilesを置くべきディレクトリにデコードしている
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo -n ${{ secrets.PROVISIONING_PROFILE }} | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/389.mobileprovision

      # 署名をする
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1 # 外部パッケージを使っている 
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}

      # ipa ファイルを出力する
      - name: Create ipa file
        # GITHUB_RUN_NUMBER をビルドナンバーに指定することで被りがないようにしている
        run: flutter build ipa --dart-define=FLAVOR=prod --export-options-plist=ExportOptions.plist --build-number ${GITHUB_RUN_NUMBER}

      # AppStoreConnect にアップロードする
      - name: Upload to AppStoreConnect
        run: |
          pwd
          ls -la
          cd build/ios/ipa/
          pwd 
          ls -la
          cd ../../..
          pwd
          xcrun altool --upload-app --type ios -f "build/ios/ipa/.389.ipa" -u "${{ secrets.APPLE_ID }}" -p "${{ secrets.APPLE_APP_PASS }}"
          pwd
